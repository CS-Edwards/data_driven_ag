library(dplyr)
library(tidyr)
library(tidyverse)
library(ggplot2)
library(raster)
library(plotrix)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(tidyr)
library(tidyverse)
library(ggplot2)
library(raster)
library(plotrix)
#FAO data
#uala data
#kalo data
#papaya data
#setwd("\\Users\\Candace Edwards\\Desktop\\Data_Ag\\week1")
dat<-read.csv("Rice_yield_FAO.csv")
####what are the column headings
names(dat) #names of columns
str(dat) #what type of variable is each column, numeric, factor, integer
dim(dat) #what are the dimensions of the dataset
summarise(dat, avg = mean(Yield_tonnes_per_ha),
min = min(Yield_tonnes_per_ha),
max = max(Yield_tonnes_per_ha),
stan_dev = sd(Yield_tonnes_per_ha),
coefficient_var = cv(Yield_tonnes_per_ha),
stan_err = std.error(Yield_tonnes_per_ha))
#group by country
sum_dat <- dat
group_by(Country) %>%
summarise_if(is.numeric, list(min = min, max = max, mean = mean, median = median, cv = cv))
sumarise_if?
?summarise_if
ggplot(sumdat, aes())+
geom_point()+
theme_bw()
ggplot(sum_dat, aes())+
geom_point()+
theme_bw()
summarise(dat, avg = mean(Yield_tonnes_per_ha),
min = min(Yield_tonnes_per_ha),
max = max(Yield_tonnes_per_ha),
stan_dev = sd(Yield_tonnes_per_ha),
coefficient_var = cv(Yield_tonnes_per_ha),
stan_err = std.error(Yield_tonnes_per_ha))
#group by country
sum_dat <- dat
group_by(Country) %>%
summarise_if(is.numeric, list(min = min, max = max, mean = mean, median = median, cv = cv))
names(dat)
sum_dat <- dat
group_by(Country) %>%
summarise_if(is.numeric, list(min = min, max = max, mean = mean, median = median, cv = cv))
sum_dat <- dat
group_by(Country) %>%
summarise_if(is.numeric, list(min = min, max = max, mean = mean, median = median, cv = cv))
sum_dat <- dat
group_by(dat.Country) %>%
summarise_if(is.numeric, list(min = min, max = max, mean = mean, median = median, cv = cv))
sum_dat <- dat %>%
group_by(Country) %>%
summarise(
avg = mean(Yield_tonnes_per_ha),
min = min(Yield_tonnes_per_ha),
max = max(Yield_tonnes_per_ha),
stan_dev = sd(Yield_tonnes_per_ha),
coefficient_var = cv(Yield_tonnes_per_ha),
stan_err = std.error(Yield_tonnes_per_ha))
ggplot(sum_dat, aes())+
geom_point()+
theme_bw()
?geom_point()
ggplot(sum_dat, aes(x = Year, y = avg))+
geom_point()+
theme_bw()
ggplot(sum_dat, aes(x = country, y = avg))+
geom_point()+
theme_bw()
sum_dat
ggplot(sum_dat, aes(x = Country, y = avg))+
geom_point()+
theme_bw()
?aes()
ggplot(sum_dat, aes(x = Country, y = avg, colour = x))+
geom_point()+
theme_bw()
ggplot(sum_dat, aes(x = Country, y = avg, colour = "smooth"))+
geom_point()+
theme_bw()
ggplot(sum_dat, aes(x = Country, y = avg, colour = "cut"))+
geom_point()+
theme_bw()
ggplot(sum_dat, aes(x = Country, y = avg, colour = "anythin"))+
geom_point()+
theme_bw()
ggplot(sum_dat, aes(x = Country, y = avg, colour = "Average"))+
geom_point()+
theme_bw()
ggplot(sum_dat, aes(x = Country, y = avg, colour = "blue"))+
geom_point()+
theme_bw()
ggplot(sum_dat, aes(x = Country, y = avg, colour = "blue"))+
geom_point()#+
#theme_bw()
ggplot(sum_dat, aes(x = Country, y = avg, colour = "blue"))+
geom_point()#+
theme_bw()
ggplot(sum_dat, aes(x = Country, y = avg, colour = "blue"))+
geom_point()+
theme_bw()
ggplot(sum_dat, aes(x=Country), color="steelblue")
ggplot(sum_dat, aes(x=Country, y=avg), color="steelblue")
ggplot(sum_dat, aes(x=Country, y=avg), color="steelblue") +
geom_boxplot()+
theme_bw()
ggplot(sum_dat, aes(x=Country), color="steelblue") +
geom_boxplot()+
theme_bw()
ggplot(sum_dat, aes(x=Country)) +
geom_boxplot()+
theme_bw()
ggplot(sum_dat, aes(x="", y= Country)) +
geom_boxplot()+
theme_bw()
ggplot(sum_dat, aes(x=Country, y= "")) +
geom_boxplot()+
theme_bw()
ggplot(sum_dat, aes(x=Country)) + geom_bar(fill='darkgoldenrod2') +
theme(panel.background = element_rect(fill = 'steelblue'),
panel.grid.major = element_line(colour = "firebrick", size=3),
panel.grid.minor = element_line(colour = "blue", size=1))
ggplot(sum_dat, aes(x=Country, y=avg)) + geom_bar(fill='darkgoldenrod2') +
theme(panel.background = element_rect(fill = 'steelblue'),
panel.grid.major = element_line(colour = "firebrick", size=3),
panel.grid.minor = element_line(colour = "blue", size=1))
ggplot(sum_dat, aes(x=avg)) + geom_bar(fill='darkgoldenrod2') +
theme(panel.background = element_rect(fill = 'steelblue'),
panel.grid.major = element_line(colour = "firebrick", size=3),
panel.grid.minor = element_line(colour = "blue", size=1))
ggplot(sum_dat, aes(x=Country
)) + geom_bar(fill='darkgoldenrod2') +
theme(panel.background = element_rect(fill = 'steelblue'),
panel.grid.major = element_line(colour = "firebrick", size=3),
panel.grid.minor = element_line(colour = "blue", size=1))
boxplot(avg ~ "", data = sum_dat, main = "Average Yield Boxplot")
num(dat)
names(dat)
#density plot
# Change line color and fill color
ggplot(dat, aes(x=Yield_tonnes_per_ha))+
geom_density(color="darkblue")
#density plot
# Change line color and fill color
ggplot(dat, aes(x=Yield_tonnes_per_ha))+
geom_density(color="darkblue", fill="lightblue")
#density plot
# Change line color and fill color
ggplot(dat, aes(x=Yield_tonnes_per_ha))+
geom_density(color="darkblue", fill=country)
#density plot
# Change line color and fill color
ggplot(dat, aes(x=Yield_tonnes_per_ha))+
geom_density(color="darkblue", fill=Country)
#density plot
# Change line color and fill color
ggplot(dat, aes(x=Yield_tonnes_per_ha))+
geom_density(color="darkblue", fill=dat$Country)
#density plot
# Change line color and fill color
ggplot(dat, aes(x=Yield_tonnes_per_ha))+
geom_density(color="darkblue", fill="green")
#density plot
# Change line color and fill color
ggplot(dat, aes(x=Yield_tonnes_per_ha))+
geom_density(aes(fill=factor(Country)), alpha = 0.8) +
labs(title = "Density Plot",
subtitle="Distribution of Roce Yields fro Countries",
caption = "Source: Rice",
x = "yields (t/ha",
fill = "# countries")
#facet_wrap -- makes a series of grapshs by factor
#density plot
# Change line color and fill color
ggplot(dat, aes(x=Yield_tonnes_per_ha))+
geom_density(aes(fill=factor(Country)), alpha = 0.8) +
labs(title = "Density Plot",
subtitle="Distribution of Rice Yields fro Countries",
caption = "Source: Rice",
x = "yields (t/ha)",
fill = "# countries")
